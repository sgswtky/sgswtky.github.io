<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins on 壁は登るためにある</title>
    <link>https://sgswtky.github.io/categories/jenkins/</link>
    <description>Recent content in Jenkins on 壁は登るためにある</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 17 Jul 2018 20:14:21 +0900</lastBuildDate>
    
	<atom:link href="https://sgswtky.github.io/categories/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins Pipeline でGroovyを書いてたら期待しない動きをした</title>
      <link>https://sgswtky.github.io/posts/jenkins-pipeline-unexpected-behavior/</link>
      <pubDate>Tue, 17 Jul 2018 20:14:21 +0900</pubDate>
      
      <guid>https://sgswtky.github.io/posts/jenkins-pipeline-unexpected-behavior/</guid>
      <description>先日から古い Jenkins2 のジョブをメンテする仕事をしていて、Pipelineで Groovyを書いてたら特定のパターンでは動くけどそれ以外だと動かないという事情に遭遇した。
やりたかったことは、パイプラインAから、ジョブAを並列で2つ起動させたかった。 色々調べたけど結局わからなくて、バージョンアップしたら治った話。
事象 動かないコード コードは極々単純で以下のようなコード。
node(&amp;#34;master&amp;#34;){ def tasks = [:] for (i = 0; i &amp;lt; 2; i++) { tasks[i.toString()] = { build job: &amp;#34;Job_A&amp;#34; } } parallel tasks } このコードを実行したら通常であれば ジョブA が２つ実行されるはず。しかし以下のように1つしか Job_Aが実行されなかった。
Started by timer [Pipeline] node Running on master in /var/lib/jenkins/workspace/Pipeline_A [Pipeline] { [Pipeline] parallel [Pipeline] [0] { (Branch: 0) [Pipeline] [1] { (Branch: 1) [Pipeline] [0] stage [Pipeline] [0] { (branch_2) [Pipeline] [1] stage [Pipeline] [1] { (branch_2) [Pipeline] [0] build (Building Job_A) [0] Scheduling project: Job_A [Pipeline] [1] build (Building Job_A) [1] Scheduling project: Job_A [0] Starting building: Job_A #4 // ↑ここで Job_A が ビルド番号4で起動しているのがわかるが、起動しているのは #4 だけ。 [Pipeline] [0] } [Pipeline] [1] } [Pipeline] [0] // stage [Pipeline] [1] // stage [Pipeline] [0] } [Pipeline] [1] } [Pipeline] // parallel [Pipeline] } [Pipeline] // node [Pipeline] End of Pipeline Finished: SUCCESS 何故か動くコード 以下のコードは期待する動きをした。</description>
    </item>
    
  </channel>
</rss>